module Module4_6 where

--
-- -----------------------
-- 4.6 Синонимы и обертки для типов
-- -----------------------
--

--
-- https://stepik.org/lesson/7602/step/3?unit=1473
-- Пусть синоним типа Endo определен следующим образом:
--
type Endo a = a -> a
--Выберите из списка типы, эквивалентные Endo (Endo Int)

-- Endo Int = Int -> Int
-- Endo (Endo Int) = Endo (Int -> Int) = (Int -> Int) -> (Int -> Int)
-- (Int -> Int) -> (Int -> Int)
--
-- допустим, функция имеет вид (Int -> Int) -> (Int -> Int)
-- тогда правда ли, что это значит следующее:
-- функция принимает первым аргументом функцию, которая принимает 1 аргумент и возвращает значение
-- можем ли мы убрать скобки вокруг первого аргумента?
-- нет, ибо тогда получится, что мы принимаем 1 аргумент типа Int, и возвращает функцию вида Int -> (Int -> Int)
-- но это нифига не так, потому что функция которая приходила первым аргументом, должна вернуть нам уже какое-то значение,
-- а не мы сами должны его получить
-- тогда смотрим дальше, на часть справа от первой стрелки -> т.е. (Int -> Int)
-- итак, мы получаем функцию типа (Int -> Int)
-- и возвращаем что? возвращаем функцию вида (Int -> Int), но ведь правда то, что эта функция принимает один аргумент типа Int
-- и возвращает значение типа Int
-- тогда мы можем убрать скобки:
-- (Int -> Int) -> Int -> Int

-- Ответ:
-- (Int -> Int) -> Int -> Int
-- (Int -> Int) -> (Int -> Int)
